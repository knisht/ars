\import Data.List (List)
\import TRS.HRS
\import TRS.Union
\open Confluence
\open TheoremContext

\func fill-confluence {tc : TheoremContext} {context : List Sort'} {s : Sort'} {meta-signature : MetaSignature Sort'}
                      (A B C : Term env context s meta-signature)
                      (A~>B : RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules) A B)
                      (A~>C : RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules) A C)
                      (l-confluential : ConfluentialSystem envL L-rules)
                      (r-confluential : ConfluentialSystem envR R-rules)
  : StraightJoin B C (Closure (RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules))) =>
  \let | A=>B => embed-rewrite-relation A B A~>B
       | A=>C => embed-rewrite-relation A C A~>C
       | grand-result : StraightJoin B C (Closure TrichromaticParallelReduction) => bpr-confluence A=>B.1 A=>C.1 A B C A=>B.2 A=>C.2 l-confluential r-confluential
  \in \new StraightJoin {
    | common-reduct => grand-result.common-reduct
    | a~>cr => \let closure-sequence => Closure.lift {_} {_} {_}
        {Closure (RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules))} (\lam x => x)
        unembed-rewrite-relation B grand-result.common-reduct grand-result.a~>cr
               \in Closure.flatten closure-sequence
    | b~>cr => \let closure-sequence => Closure.lift {_} {_} {_}
        {Closure (RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules))} (\lam x => x)
        unembed-rewrite-relation C grand-result.common-reduct grand-result.b~>cr
               \in Closure.flatten closure-sequence
  }

\func embed-rewrite-relation {tc : TheoremContext} {context : List Sort'} {s : Sort'} {meta-signature : MetaSignature Sort'}
                             (A B : Term env context s meta-signature)
                             (A~>B : RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules) A B)
  : TrichromaticParallelReduction A B => {?}

\func unembed-rewrite-relation {tc : TheoremContext} {context : List Sort'} {s : Sort'} {meta-signature : MetaSignature Sort'}
                               {A B : Term env context s meta-signature}
                               (A=>B : TrichromaticParallelReduction A B)
                               : Closure (RewriteRelation {env} (JointRules {_} {envL} {envR} L-rules R-rules)) A B => {?}